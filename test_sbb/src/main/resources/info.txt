
1. JPA 라이브러리 추가
2. JPA 세팅 (1. 어떤 DB, 2. Entity 클래스의 설정)
3. Entity Class: Question, Answer
4. H2 DB: local2에 접속해서 잘 생성되는지 확인
5. QuestionRepository, AnswerRepository
6. JUnitTest를 사용해서 Question 테이블에 값을 Insert
7. JUnitTest를 사용해서 DB의 값을 불러와서 출력 구문과 일치하는지 테스트

============================================================

1. QuestionRepository
	- subject 컬럼을 기준으로 검색 "%날짜%"
		select * from question where subject like '%?%'	===> 메소드 생성
	- content 컬럼을 기준으로 검색 "%내용%"
		select * from question where content like '%?%'	===> 메소드 생성
	- subject or content 동시에 검색	===> 메소드 생성
	
2. Answer 테이블에 값을 insert	===> Question_id 컬럼을 참조해서 insert
	AnswerRepository.save()

============================================================

1. QuestionController
2. QuestionService

	client 요청: http://localhost:9898/question/list
	"/question/list"
	Question 테이블의 값을 읽어와서 client view 페이지로 전송 (question_list.html)
	
	QuestionService
	
============================================================

1. question 테이블의 전체 레코드를 읽어와서 view로 출력
	/question/list 요청에 대한 question_list.html
	
2. question 테이블 글 상세 출력, 해당 글에 대한 답글도 같이 출력
	/question/detail/{id} 요청에 대해서 question_detail.html
	
3. 상세 페이지에서 폼 <== 답변글 등록
	답변 글까지 등록
	
	
	